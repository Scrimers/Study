[
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "CSS란",
        "explain" : "Cascading Style Sheets의 줄임말.<br><mark class='gray'>웹페이지를 꾸미는 디자인 요소로서 쓰인다.</mark><br>HTML이 만들어진 후 사람들은 단순히 정보를 노출 시키는 것에 불만을 표했다.<br>이를 보완하기 위해 디자인 적 요소가 추가되게 되는데<br>먼저 생긴 것이 font 태그와 같이 기존 html에 디자인과 관련된 태그를 추가하는 것이었다.<br>하지만 수많은 페이지의 수많은 부분의 디자인을 변경해야할 경우 font 태그나 inline-style만으로는 유지보수가 힘들어진다는 한계점에 도달하게 된다.<br>그리하여 <mark class='gray'>HTML에서 스타일만 분리하여 반복적인 부분을 일괄적으로 적용하기 위해 CSS가 탄생하게 되었다.</mark><br><br>CSS는 HTML과는 완전히 다른 언어이지만 서로 호환이 된다.<br>이유는 CSS가 HTML문법으로 작성되었기에 이를 웹브라우저가 인식하여 CSS 문법으로 해석할 수 있기에 호환이 가능한 것이다." ,
        "howUse" : ""       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "CSS 파일 변경 시 캐시 삭제 안해도 되는 방법",
        "explain" : "아주 간단하다. url?변수키=변수값 이런식으로 설정하고 CSS변동 사항이 있을때마다 변수값을 올려주면 캐시 방지가 된다." ,
        "howUse" : ""       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "CSS 적용 방법",
        "title" : "인라인 스타일",
        "explain" : "<mark class='gray'>HTML태그의 속성란에 style을 선언하여 적용할 CSS를 적는 방법</mark><br>인라인 스타일의 장점 : <mark class='gray'>각 요소마다 개별적으로 CSS를 적용시킬 수 있다.</mark><br>인라인 스타일의 단점 : <mark class='gray'>중복되는 여러 요소들에도 전부 개별적으로 CSS를 적용시켜야 하니 유지보수가 어려워짐.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='XJrJVWL' data-pen-title='인라인 스타일' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/XJrJVWL'>  인라인 스타일</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "내부 스타일",
        "explain" : "<mark class='gray'>head 태그 밑에 style태그와 선택자를 이용하여 적용할 CSS를 적는 방법</mark><br>내부 스타일의 장점 : 선언한 선택자를 지닌 모든 것들에 일괄적으로 CSS를 적용 가능. 즉, <mark class='gray'>유지보수가 쉽다.</mark><br>내부 스타일의 단점 : 같은 선택자를 지녔으나 서로 다른 CSS를 적용해야 하는 경우 불가능함.<br>(이를 해결하기 위해선 선택자가 상세하게 나뉘어야 한다.)<br><mark class='gray'>같은 스타일을 공유해야하는 페이지가 여러개 있는 경우 각 페이지 별로 선언해줘야 한다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='emOmymo' data-pen-title='내부 스타일' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/emOmymo'>  내부 스타일</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "외부 스타일",
        "explain" : "<mark class='gray'>head태그 밑에 link태그로 css파일을 연결 시켜 CSS를 적용하는 방법</mark><br>가장 많이 쓰이는 방법으로 알고있다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='raBapVE' data-pen-title='외부 스타일' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/raBapVE'>  외부 스타일</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "선택자(Selector)",
        "title" : "태그(Tag)",
        "explain" : "<mark class='gray'>태그를 선택</mark>하는 방법이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='KwPwZdr' data-pen-title='태그 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/KwPwZdr'>  태그 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "클래스(Class)",
        "explain" : "<mark class='gray'>클래스를 선택</mark>하는 방법이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='OPLPzyz' data-pen-title='클래스 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/OPLPzyz'>  클래스 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "아이디(Id)",
        "explain" : "<mark class='gray'>아이디를 선택</mark>하는 방법이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='XJrJVmv' data-pen-title='아이디 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/XJrJVmv'>  아이디 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "속성",
        "explain" : "<mark class='gray'>태그가 지닌 속성으로 선택</mark>하는 방법이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='bNbNvxo' data-pen-title='속성 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/bNbNvxo'>  속성 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "결합자",
        "title" : "여러 태그 선택",
        "explain" : "<mark class='gray'>여러 태그를 선택</mark>하는 방법이다" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='NPKPXxz' data-pen-title='여러 태그 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/NPKPXxz'>  여러 태그 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "하나의 태그 세밀하게 선택",
        "explain" : "<mark class='gray'>하나의 태그를 아이디,클래스,속성들을 세밀하게 선택</mark>하는 방법이다" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='jENEzQz' data-pen-title='하나의 태그 세밀하게 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/jENEzQz'>  하나의 태그 세밀하게 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "자손",
        "explain" : "<mark class='gray'>자손 태그를 선택</mark>하는 방법이다" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='pvzvpyq' data-pen-title='자손 태그 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/pvzvpyq'>  자손 태그 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "자식",
        "explain" : "<mark class='gray'>자식 태그를 선택</mark>하는 방법이다<br>제일 처음의 p태그 바로 아래에 있는 a태그만 red로 변하게 된다.<br>button의 색상이 변하지 않는 이유는 자식이 아닌 자손이기 떄문이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='ByByJzr' data-pen-title='자식 태그 선택' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/ByByJzr'>  자식 태그 선택</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "CSS 적용 순서",
        "explain" : "적용순서는 다음과 같다.<br><mark class='gray'>1.기본적으로 뒤에 나오는 css가 우선순위가 높다.<br>2.!important<br>3.inline style 속성<br>4.id<br>5.class, 다른 속성, 수도클래스(:first-child같은 것)<br>6.tag element, 수도엘레먼트(::before같은 것).<br>※우선순위가 같다면 개수가 많은 css가 우선순위가 높다.<br><br>※일반적으로 !important와 inline style attribute은 실무에서 사용을 제한하는 경우가 많다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='QwLbaqV' data-pen-title='CSS 적용 순서 3' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/QwLbaqV'>  CSS 적용 순서 3</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "display",
        "title" : "inline",
        "explain" : "<mark class='gray'>컨텐츠 너비만큼 영역을 잡는다.</mark><br>※따로 높이가 설정되지 않았다면 컨텐츠의 높이를 따라간다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='YPKPYpZ' data-pen-title='디스플레이 inline' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/YPKPYpZ'>  디스플레이 inline</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "block",
        "explain" : "<mark class='gray'>화면 전체 너비만큼 영역을 잡는다.</mark><br>※따로 높이가 설정되지 않았다면 컨텐츠의 높이를 따라간다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='Wbebdog' data-pen-title='디스플레이 block' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/Wbebdog'>  디스플레이 block</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "Inline-block",
        "explain" : "inline, block의 장점(?)을 합친 것.<br><mark class='gray'>inline과 마찬가지로 내용물의 길이만큼 공간을 차지하나 width, height, padding, margin등 여러 속성을 줄 수 있다.</mark><br>일반적으로 가장 많이 쓰이며 Block 타입의 Div태그를 Inline_block로 변경해서 많이 쓴다.<br>※따로 높이가 설정되지 않았다면 컨텐츠의 높이를 따라간다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='pvzvpNG' data-pen-title='디스플레이 Inline-block' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/pvzvpNG'>  디스플레이 Inline-block</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid",
        "explain" : "일반적으로 <mark class='gray'>레이아웃을 설정할 때 사용</mark>한다.<br>예를 들어 div들을 나란히 배치하고싶다면 아래와 같이 하면 된다.<br>※fr = 화면전체를 쓸 수 있도록 자동으로 조정되는 단위" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='dPbPJWN' data-pen-title='그리드' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/dPbPJWN'>  그리드</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "박스 모델(position 제외)",
        "explain" : "<mark class='gray'>content = width(너비)와 height(높이)가 차지하는 공간.<br>보통 태그가 차지하는 공간이다.<br>padding = 테두리 기준 내부 여백.<br>※스크롤바는 padding 공간 안에 생성된다.<br>border = 테두리.<br>margin = 테두리 기준 외부 여백.<br>※padding, border, margin등 동서남북으로 값을 줄 수 있는 것들은 연달아 값을 설정해줄 수 있다.</mark><br>예를 들어 padding-right: 10px 은 padding: 0 10px 0 0 으로 표현할 수 있다.<br>위 오른쪽 아래 왼쪽 순으로 적으면 된다.<br><br>※margin, padding, border 모두 width에 포함되지 않는다.<br>만약 width가 50px, height가 30px이고 padding이 10px, border가 10px이면 총 width는 90(50 + 20 + 20)px, height는 70(30 + 20 + 20)px가 된다. 20px씩 더하는 이유는 좌우 또는 상하에 padding과 border가 각각 있기 때문이다.<br>이러한 번거로움을 해결하기 위해 <mark class='gray'>box-sizing: border-box 를 해주면 width와 height는 content의 너비가 아니라 border까지 포함한 태그의 너비가 된다.</mark><br>기본적으로는 box-sizing: content-box이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='LEPEexR' data-pen-title='박스 모델' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/LEPEexR'>  박스 모델</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "박스 모델(position)",
        "title" : "position",
        "explain" : "<mark class='gray'>HTML 문서 상에서 요소가 배치되는 방식을 정할 때 사용한다.<br>일반적으로 정확한 위치 지정을 위해서 top, right, bottom, left 속성을 함께 쓴다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "position: static",
        "explain" : "<mark class='gray'>디폴트 값이다. static 상태일 땐 HTML에 작성된 순서 그대로 브라우저 화면에 표시가 되며 top, right, bottom, left 속성값은 position 속성이 static일 때는 무시된다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='GgKgevo' data-pen-title='position:static' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>    <span>See the Pen <a href='https://codepen.io/scrimer/pen/GgKgevo'>    position:static</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)    on <a href='https://codepen.io'>CodePen</a>.</span>  </p>  <script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "position: relative",
        "explain" : "요소를 <mark class='gray'>원래 위치를 기준으로 상대적(relative)으로 배치</mark>해준다.<br><mark class='gray'>top, right, bottom, left 속성을 이용해서, 요소가 원래 위치에 있을 때 보다 얼마나 떨어지게 할지를 지정</mark>할 수 있다.<br>떨어지게 하는 거라 예를 들어 right=20px 을 주게 된다면 오른쪽으로 20px 이동 하는게 아니라<br>현재 위치에서 오른쪽에 20px만큼의 공간이 들어서게 되어 왼쪽으로 밀리게 된다고 보면 된다.<br>만약 반대쪽으로 이동하게 하고 싶다면 음수(ex : -20px)를 쓰면 된다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='dPbPrVx' data-pen-title='position: relative' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>    <span>See the Pen <a href='https://codepen.io/scrimer/pen/dPbPrVx'>    position: relative</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)    on <a href='https://codepen.io'>CodePen</a>.</span>  </p>  <script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "position: absolute",
        "explain" : "<mark class='gray'>position 속성이 static이 아닌 요소를 기준으로 위치를 지정</mark>한다.<br><mark class='gray'>absolute속성을 지닌 자신을 기준으로 부모, 조상에 해당하는 요소들의 속성을 찾는다.<br>속성 중 static이 아닌 첫 번째 상위요소를 배치 기준으로 설정</mark>한다.<br>만약 <mark class='gray'>상위요소 중 static이 아닌 것이 없다면 body가 배치 기준이 된다.</mark><br>absolute 속성값은 relative 속성값과 함께 사용되는 경우가 많다.<br>또한 <mark class='gray'>absolute가 되면 div여도 더는 width: 100%가 아니게 된다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='jENPbww' data-pen-title='position: absolute' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/jENPbww'>  position: absolute</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "position: fixed",
        "explain" : "<mark class='gray'>요소의 위치를 고정할 때 쓴다.</mark><br><mark class='gray'>fixed 속성값의 배치 기준은 브라우저 전체화면(뷰포트(viewport))이다.<br>즉, 부모의 영향을 전혀 받지 않는다.</mark><br>fixed속성에서의 top, right, bottom, left는 브라우저의 상단, 우측, 하단, 좌측으로 부터 얼마나 떨어져 있는지 이다.<br><mark class='gray'>fixed도 absolute와 마찬가지로 div태그여도 더는 width: 100%가 아니게 된다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='ByBNoPp' data-pen-title='position: fixed' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/ByBNoPp'>  position: fixed</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "position: sticky",
        "explain" : "fixed와 비슷하지만... 자신의 위치를 벗어났을때 그떄 달라 붙는다.<br>글로선 표현하기 좀 힘드니 예시를 보는게 좋을 것 같다.<br>fixed와 sticky의 차이는<br><mark class='gray'>fixed는 처음부터 지정한 위치에 달라 붙어 있지만, sticky는 해당 영역을 넘어서야 달라 붙게된다.</mark><br>예를 들어 top:100px의 속성을 지닌 fixed가 있다고 헸을때 스크롤을 내리던, 내리지 않던 무조건 top:100px에 해당하는 위치에 고정되어 있다.<br>반면 sticky의 경우 처음부터 top:100px에 해당하는 위치에 고정되어 있는게 아니라 스크롤을 내리다 sticky 속성을 지닌 요소를 지나쳤을때 달라붙게 된다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='raBVOqq' data-pen-title='position: sticky' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/raBVOqq'>  position: sticky</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "반응형 디자인",
        "explain" : "<mark class='gray'>화면의 크기에 따라서 웹페이지의 각 요소들이 최적화된 모양으로 바뀌게 하는 것</mark>이다.<br>이러한 <mark class='gray'>반응형 디자인을 만들기 위해선 미디어쿼리(@media)를 써야한다.</mark><br>아래의 내용은 div태그는 기본적으로 border, font-size속성을 지니고 있되<br>화면의 최대 크기가 600이하일떄는 div태그를 보이지 않게 하라는 의미이다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='XJrJVaJ' data-pen-title='반응형 디자인' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/XJrJVaJ'>  반응형 디자인</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupStart",
        "reStudy" : "y",
        "mainTitle" : "정렬",
        "title" : "기본적인 정렬 방법",
        "explain" : "정렬하는 방법은 여러가지가 있는 것으로 보인다.<br>추후 공부 예정." ,
        "howUse" : ""       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "float",
        "explain" : "왼쪽->오른쪽, 위->아래의 순서가 아닌 <mark class='gray'>지정한 위치로 붕 뜨게 하는 정렬방법.</mark><br><mark class='gray'>float를 사용해서 지정 위치로 붕 뜨게 된다면. 그 다음 태그들이 왼쪽->오른쪽, 위->아래의 순서로 빈자리를 메꾸게 된다.</mark><br>이를 방지하기 위해 <mark class='gray'>빈자리를 메꾼 태그들에 clear 속성을 써서 빈자리를 메꾸지 못하게 할 수 있다.</mark><br><mark class='gray'>flaot를 쓰게되면 div의 경우 width가 100%가 아니게 된다.<br>또한 부모태그가 float속성을 지닌 자식태그의 height를 인식하지 못한다는 문제점이 있다.<br>이를 위해서 부모 태그에게 overflow: auto나 overflow: hidden를 주어 float속성의 자식 태그의 height를 인식하게 할 수 있다.</mark><br>display: inline-block의 간격 문제를 해결하는 데도 float: left가 사용된다." ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='yyBNpOR' data-pen-title='float' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/yyBNpOR'>  float</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "z-index",
        "explain" : "먼저 나온 <mark class='gray'>태그를 더 위에 배치하고 싶을 떄 사용</mark>한다.<br>z값을 조정하는 것이라고 생각하면 편할 듯 하다.<br><mark class='gray'>※z-index는 각 태그들이 왼쪽->오른쪽, 위->아래의 순서로 노출되는 것을 다루는 것이 아니라 어떤 태그가 위에 겹쳐서 노출되는 지를 다루는 것이다.</mark><br>아래의 순서로 겹쳐진다.<br><mark class='gray'>1. position 속성에 z-index가 있고 z-index가 큰 것.<br>(부모-자식 관계로 형성된 태그가 있다면 부모로 먼저 비교한다.)<br>2. position 속성만 있는 것<br>3. position 속성이 없는 것</mark><br>아래의 예시를 보면 금방 이해할 것으로 생각된다.<br><br><mark class='gray'>※z-index의 기본 값은 0이다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='Wbevdga' data-pen-title='z-index' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/Wbevdga'>  z-index</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "",
        "reStudy" : "y",
        "mainTitle" : "",
        "title" : "BFC",
        "explain" : "Block Formatting Context의 줄임말.<br>보통 <mark class='gray'>마진 콜랩싱이나 float과의 상호작용 처리를 위해 사용</mark>한다고 한다.<br>뭔가 조금 난해한 개념이다. 추후 다시 공부를 해야할 것 같다..." ,
        "howUse" : ""       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "Margin-collapsing",
        "explain" : "<mark class='gray'>마진 겹침 현상</mark>이다.<br><mark class='gray'>두 개 이상인 블록 요소들의 상하 마진이 겹칠 때 어느 한 쪽의 값만 적용하는 브라우저의 렌더링 규칙</mark>이라고 보면 될 것 같다.<br><mark class='gray'>해결 방법은 마진이 겹치는 태그들 사이에 bfc를 생성해주면 된다.</mark>" ,
        "howUse" : "<p class='codepen' data-height='300' data-default-tab='html,result' data-slug-hash='VYZLxja' data-pen-title='Margin-collapsing' data-user='scrimer' style='height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;'>  <span>See the Pen <a href='https://codepen.io/scrimer/pen/VYZLxja'>  Margin-collapsing</a> by lsj (<a href='https://codepen.io/scrimer'>@scrimer</a>)  on <a href='https://codepen.io'>CodePen</a>.</span></p><script async src='https://cpwebassets.codepen.io/assets/embed/ei.js'></script>"       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "Flex 관련",
        "title" : "테스트 사이트",
        "explain" : "아래에 나오는 Flex 관련 내용들은 전부 아래 사이트에서 연습해보면 된다.<br><mark class='gray'><a href='https://flexboxfroggy.com/#ko'>https://flexboxfroggy.com/#ko</a></mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "justify-content",
        "explain" : "<mark class='gray'>Flex 요소들을 가로선 상에서 정렬 시 사용한다.<br>flex-start: 요소들을 컨테이너의 왼쪽으로 정렬한다.<br>flex-end: 요소들을 컨테이너의 오른쪽으로 정렬한다.<br>center: 요소들을 컨테이너의 가운데로 정렬한다.<br>space-between: 요소들 사이에 동일한 간격을 둔다.<br>space-around: 요소들 주위에 동일한 간격을 둔다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "align-items",
        "explain" : "<mark class='gray'>Flex 요소들을 세로선 상에서 정렬 시 사용한다.<br>flex-start: 요소들을 컨테이너의 꼭대기로 정렬합니다.<br>flex-end: 요소들을 컨테이너의 바닥으로 정렬합니다.<br>center: 요소들을 컨테이너의 세로선 상의 가운데로 정렬합니다.<br>baseline: 요소들을 컨테이너의 시작 위치에 정렬합니다.<br>stretch: 요소들을 컨테이너에 맞도록 늘립니다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "flex-direction",
        "explain" : "<mark class='gray'>요소들이 정렬될 방향을 지정 시 사용한다.<br>row: 요소들을 텍스트의 방향과 동일하게 정렬합니다.<br>row-reverse: 요소들을 텍스트의 반대 방향으로 정렬합니다.<br>column: 요소들을 위에서 아래로 정렬합니다.<br>column-reverse: 요소들을 아래에서 위로 정렬합니다.<br>※column-reverse 또는 row-reverse를 사용하면 요소들의 start와 end의 순서도 뒤바뀐다.</mark> 예를 들어 justify-content:flex-start는 flex-direction:row-reverse + justify-content:flex-end와 같다.<br>또한<mark class='gray'>flex-direction: column이라면 jsutify-content는 방향이 세로로, align-items는 방향이 가로로 바뀌게 된다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "order",
        "explain" : "<mark class='gray'>Flex 요소들의 순서를 지정 시 사용한다.<br>선택한 요소의 현재 위치를 기준으로 양수(+)면 앞으로, 음수(-)면 뒤로 가는 듯 하다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "align-self",
        "explain" : "<mark class='gray'>이미 설정한 align-items 값을 무시하고 Flex 요소를 세로선 상에서 정렬 시 사용한다.<br>align-items과 완전히 같은 값들을 사용한다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "flex-wrap",
        "explain" : "<mark class='gray'>Flex 요소들을 한 줄 또는 여러 줄에 걸쳐 정렬 시 사용한다.<br>nowrap: 모든 요소들을 한 줄에 정렬합니다.<br>wrap: 요소들을 여러 줄에 걸쳐 정렬합니다.<br>wrap-reverse: 요소들을 여러 줄에 걸쳐 반대로 정렬합니다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "flex-flow",
        "explain" : "<mark class='gray'>flex-direction과 flex-wrap을 한번에 쓸 수 있도록 해주는 속성이다.<br>공백을 두어 사용하면 되며, 아래와 같이 사용하면 된다.<br>flex-flow: column wrap</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "align-content",
        "explain" : "<mark class='gray'>세로선 상에 여분의 공간이 있는 경우 Flex 컨테이너 사이의 간격을 조절할 때 사용한다.<br>flex-start: 여러 줄들을 컨테이너의 꼭대기에 정렬합니다.<br>flex-end: 여러 줄들을 컨테이너의 바닥에 정렬합니다.<br>center: 여러 줄들을 세로선 상의 가운데에 정렬합니다.<br>space-between: 여러 줄들 사이에 동일한 간격을 둡니다.<br>space-around: 여러 줄들 주위에 동일한 간격을 둡니다.<br>stretch: 여러 줄들을 컨테이너에 맞도록 늘립니다.<br>※한 줄만 있는 경우, align-content는 효과를 보이지 않는다.<br>※align-content는 여러 줄들 사이의 간격을 지정하며, align-items는 컨테이너 안에서 어떻게 모든 요소들이 정렬하는지를 지정한다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupStart",
        "reStudy" : "",
        "mainTitle" : "Grid 관련",
        "title" : "테스트 사이트",
        "explain" : "아래에 나오는 Grid 관련 내용들은 전부 아래 사이트에서 연습해보면 된다.<br><mark class='gray'><a href='https://cssgridgarden.com/#ko'>https://cssgridgarden.com/#ko</a></mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-column-start",
        "explain" : "<mark class='gray'>grid-column-start: 그리드 요소의 시작 열(column) 위치를 지정한다.<br>grid-column-start: span 2 와 같이 span을 이용해서 열 넓이를 지정할 수도 있다.(※span값은 양수만 가능하다.)<br>※디폴트 방향은 왼쪽이나, 값을 음수로 지정하게 되면 오른쪽부터 방향이 지정된다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-column-end",
        "explain" : "<mark class='gray'>grid-column-end: 그리드 요소의 마지막 열(column) 위치를 지정한다.<br>grid-column-end: span 2 와 같이 span을 이용해서 열 넓이를 지정할 수도 있다.(※span값은 양수만 가능하다.)<br>(테스트 해본 결과 span을 사용하면 grid-column-start를 시작 위치로 잡고, 자기자신을 포함한 숫자만큼 이동한다.<br>※또한 span은 grid-column-start에서도 쓸 수 있다.)<br>        ※grid-column-start, grid-column-end를 같이 사용하게 되면 start ~ end 까지의 열 위치를 지정할 수 있다.<br>※디폴트 방향은 왼쪽이나, 값을 음수로 지정하게 되면 오른쪽부터 방향이 지정된다.<br>※grid-column-end가 grid-column-start보다 반드시 클 필요는 없다.</mark> start가5, end가2 여도 영역이 지정된다." ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-column",
        "explain" : "<mark class='gray'>grid-column-start와 grid-column-end를 한번에 입력할 수 있게 해준다.<br>슬래쉬(/)로 구분하여 쓰며</mark>, 아래와 같이 쓴다.<br>grid-column: 4 / 6 는 grid-column-start: 4 grid-column-end: 6 와 같다.<br>※span을 사용할 수 있다." ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-row-start",
        "explain" : "<mark class='gray'>grid-column-start의 세로버전이라고 보면 된다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-row",
        "explain" : "<mark class='gray'>grid-column의 세로버전이라고 보면 된다.<br>※grid-column과 grid-row를 이용해서 아래와 같이 특정 범위를 지정할 수도 있다.</mark><br>grid-column: 2/span 4<br>grid-row: 1/ span 5" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-area",
        "explain" : "<mark class='gray'>grid-column와 grid-row를 한번에 입력할 수 있게 해준다.<br>슬래쉬(/)로 구분하여 쓰며, grid-row-start, grid-column-start, grid-row-end, grid-column-end순으로 입력할 수 있다.</mark><br>아래와 같이 쓴다.<br>grid-area: 1/2/4/6" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "order",
        "explain" : "그리드 요소들이 grid-area, grid-column, grid-row, 기타 속성들을 사용하지 않고 표시될 경우 소스코드에 기입된 순서대로 노출된다.<br>이때 <mark class='gray'>order속성을 쓰면 재정의가 가능하다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-template-columns",
        "explain" : "<mark class='gray'>그리드의 열 크기를 정할때 사용한다.<br>또한 반복적으로 설정해야 할 경우(grid-template-columns: 20% 20% 20% 20% 20%) repeat함수를 써서 간결하게 노출할 수 있다.(grid-template-columns: repeat(5, 20%))</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-template-rows",
        "explain" : "<mark class='gray'>그리드의 행 크기를 정할때 사용한다.<br>또한 반복적으로 설정해야 할 경우(grid-template-rows: 20% 20% 20% 20% 20%) repeat함수를 써서 간결하게 노출할 수 있다.(grid-template-columns: repeat(5, 20%))</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "groupIng",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "grid-template",
        "explain" : "<mark class='gray'>grid-template-rows와 grid-template-columns를 한번에 입력할 수 있게 해준다.</mark><br>아래와 같이 사용할 수 있다.<br>grid-template: 60% / 200px은 grid-template-rows:60% grid-template-columns:200px와 같다." ,
        "howUse" : ""       
    },
    {
        "type" : "groupEnd",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "fr단위",
        "explain" : "<mark class='gray'>fr단위를 쓰게되면 대상이 되는 영역을 fr단위만큼 쪼개서 영역이 할당되게 된다.<br>예를 들어 grid-template-columns: 2fr 1fr 3fr 이라고 한다면 대상이 되는 영역을 총 6등분하여 1번째는 2등분된 영역, 2번째는 1등분된 영역, 3번째는 3등분된 영역을 가지게 된다.</mark>" ,
        "howUse" : ""       
    },
    {
        "type" : "",
        "reStudy" : "",
        "mainTitle" : "",
        "title" : "의사 클래스(가상 클래스)",
        "explain" : "" ,
        "howUse" : ""       
    }
]